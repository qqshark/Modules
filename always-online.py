# ¬©Ô∏è qq_shark, 2025
# üåê [https://github.com/qqshark/Modules/blob/main/always-online.py](https://github.com/qqshark/Modules/blob/main/always-online.py)
# Licensed under GNU AGPL v3.0
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

# meta developer: @qq_shark

__version__ = (1, 3, 3)

from telethon.tl.functions.account import UpdateStatusRequest
from .. import loader, utils

@loader.tds
class AlwaysOnline(loader.Module):
    """Always Online - –º–æ–¥—É–ª—å –≤–µ—á–Ω–æ–≥–æ –æ–Ω–ª–∞–π–Ω–∞ (by @qq_shark)."""

    strings = {
        "name": "Always Online",
        "online_on": "<blockquote><emoji document_id=5278411813468269386>‚úÖ</emoji> <b>Online mode enabled!</b></blockquote>",
        "online_off": "<blockquote><emoji document_id=5278578973595427038>üö´</emoji> <b>Online mode disabled!</b></blockquote>",
    }

    strings_ru = {
        "name": "Always Online",
        "online_on": "<blockquote><emoji document_id=5278411813468269386>‚úÖ</emoji> <b>–†–µ–∂–∏–º –æ–Ω–ª–∞–π–Ω –≤–∫–ª—é—á–µ–Ω!</b></blockquote>",
        "online_off": "<blockquote><emoji document_id=5278578973595427038>üö´</emoji> <b>–†–µ–∂–∏–º –æ–Ω–ª–∞–π–Ω –≤—ã–∫–ª—é—á–µ–Ω!</b></blockquote>",
    }

    strings_ua = {
        "name": "Always Online",
        "online_on": "<blockquote><emoji document_id=5278411813468269386>‚úÖ</emoji> <b>–†–µ–∂–∏–º –æ–Ω–ª–∞–π–Ω —É–≤—ñ–º–∫–Ω–µ–Ω–æ!</b></blockquote>",
        "online_off": "<blockquote><emoji document_id=5278578973595427038>üö´</emoji> <b>–†–µ–∂–∏–º –æ–Ω–ª–∞–π–Ω –≤–∏–º–∫–Ω–µ–Ω–æ!</b></blockquote>",
    }

    strings_de = {
        "name": "Always Online",
        "online_on": "<blockquote><emoji document_id=5278411813468269386>‚úÖ</emoji> <b>Online-Modus aktiviert!</b></blockquote>",
        "online_off": "<blockquote><emoji document_id=5278578973595427038>üö´</emoji> <b>Online-Modus deaktiviert!</b></blockquote>",
    }

    def __init__(self):
        self.online_mode = False

    async def client_ready(self, client, db):
        self.db = db
        self.client = client
        self.online_mode = self.db.get("AlwaysOnline", "online_mode", False)

    @loader.loop(interval=3, autostart=True) # –µ—â—ë —Ä–∞–∑ thnx @xdesai –∑–∞ –∏–¥–µ—é 
    async def keep_online_loop(self):
        if not self.online_mode:
            return
        try:
            await self.client(UpdateStatusRequest(offline=False)) # –µ–±–∞—Ç—å —è –ø—Ä–æ–±–∫–∞ —Ä–µ—Ç—É—Ä–Ω –∑–∞–ø–∏—Ö–Ω—É–ª —Ç—É–¥—ã —Å—É–∫–∞ –µ–±–∞–Ω–∞—è (–ø–∞—Å—Ö–∞–ª–∫–æ —Ç–∏–ø–∞)
        except Exception:
            pass

    @loader.command()
    async def onlinecmd(self, message):
        """- –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ –æ–Ω–ª–∞–π–Ω"""
        self.online_mode = not self.online_mode
        self.db.set("AlwaysOnline", "online_mode", self.online_mode)
        
        if self.online_mode:
            await utils.answer(message, self.strings["online_on"])
        else:
            await utils.answer(message, self.strings["online_off"])
